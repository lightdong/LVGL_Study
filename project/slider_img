    #define PROJECT_3 1


    lv_obj_t *redslider,*greenslider,*blueslider,*zoomslider,*angleslider,*opaslider;
    lv_obj_t *img_setting;

    
    #if PROJECT_3 /*项目3*/
    /*创建图片对象，并设置好位置*/
    img_setting = lv_img_create(lv_scr_act());
    lv_img_set_src(img_setting,&setting);
    //lv_img_set_zoom(img_setting,512);
    lv_obj_align(img_setting,LV_ALIGN_LEFT_MID,15,0);
    lv_img_set_zoom(img_setting,256);

    /*创建滑动条*/
    redslider = lv_slider_create(lv_scr_act());
    greenslider = lv_slider_create(lv_scr_act());
    blueslider = lv_slider_create(lv_scr_act());
    zoomslider = lv_slider_create(lv_scr_act());
    angleslider = lv_slider_create(lv_scr_act());
    opaslider = lv_slider_create(lv_scr_act());

    my_slider_create(redslider,0xff0000,0,255);
    my_slider_create(greenslider,0x00ff00,0,255);
    my_slider_create(blueslider,0x0000ff,0,255);
    my_slider_create(zoomslider,0xA394CF,128,512);
    my_slider_create(angleslider,0xE3AABE,0,3600);
    my_slider_create(opaslider,0xE6BB8E,0,255);
//    lv_obj_set_size(redslider,10,160);
//    lv_obj_set_style_bg_color(redslider,lv_color_hex(0xff0000),LV_STATE_DEFAULT | LV_PART_INDICATOR);
//    lv_obj_set_style_bg_color(redslider,lv_color_hex(0xff0000),LV_STATE_DEFAULT | LV_PART_KNOB);
    lv_obj_align_to(redslider,img_setting,LV_ALIGN_OUT_RIGHT_MID,50,0);
    lv_obj_align_to(greenslider,redslider,LV_ALIGN_OUT_RIGHT_MID,20,0);
    lv_obj_align_to(blueslider,greenslider,LV_ALIGN_OUT_RIGHT_MID,20,0);
    lv_obj_align_to(zoomslider,blueslider,LV_ALIGN_OUT_RIGHT_MID,20,0);
    lv_obj_align_to(angleslider,zoomslider,LV_ALIGN_OUT_RIGHT_MID,20,0);
    lv_obj_align_to(opaslider,angleslider,LV_ALIGN_OUT_RIGHT_MID,20,0);

    lv_obj_add_event_cb(redslider,project3_slider_cb,LV_EVENT_VALUE_CHANGED,NULL);
    lv_obj_add_event_cb(greenslider,project3_slider_cb,LV_EVENT_VALUE_CHANGED,NULL);
    lv_obj_add_event_cb(blueslider,project3_slider_cb,LV_EVENT_VALUE_CHANGED,NULL);
    lv_obj_add_event_cb(zoomslider,project3_slider_cb,LV_EVENT_VALUE_CHANGED,NULL);
    lv_obj_add_event_cb(angleslider,project3_slider_cb,LV_EVENT_VALUE_CHANGED,NULL);
    lv_obj_add_event_cb(opaslider,project3_slider_cb,LV_EVENT_VALUE_CHANGED,NULL);
    #endif // PROJECT_3
}

#if PROJECT_3
/*封装创建滑条的函数*/
static void my_slider_create(lv_obj_t *slider_obj,uint32_t color,int32_t min,int32_t max){
    lv_obj_set_size(slider_obj,10,160);
    lv_obj_set_style_bg_color(slider_obj,lv_color_hex(color),LV_STATE_DEFAULT | LV_PART_INDICATOR);
    lv_obj_set_style_bg_color(slider_obj,lv_color_hex(color),LV_STATE_DEFAULT | LV_PART_KNOB);
    lv_slider_set_range(slider_obj,min,max);
}

/*配置滑条的回调函数*/
/*物件的变量都配置成了全局变量，可以使用*/
static void project3_slider_cb(lv_event_t *e){
    lv_obj_set_style_img_recolor_opa(img_setting,lv_slider_get_value(opaslider),LV_STATE_DEFAULT | LV_PART_MAIN);
    lv_obj_set_style_img_recolor(img_setting,\
                                 lv_color_make(lv_slider_get_value(redslider),\
                                                        lv_slider_get_value(greenslider),\
                                                        lv_slider_get_value(blueslider)),\
                                 LV_STATE_DEFAULT | LV_PART_MAIN);
    lv_img_set_zoom(img_setting,lv_slider_get_value(zoomslider));
    lv_img_set_angle(img_setting,lv_slider_get_value(angleslider));
    printf("value changed!!!\n");
}

#endif // PROJECT_3
